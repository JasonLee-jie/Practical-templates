package Main1;

/**
 * @Auther: Jason Lee
 * @Date: 2021/4/12 - 04 - 12 - 18:04
 * @Description: Main1
 * @version: 1.0
 */

import com.sun.jdi.PathSearchingVirtualMachine;

import java.sql.SQLOutput;

/**
 * 快速排序
 */
public class QuickSort {
    /**
     * 划分数组
     */
    public static void partition(long arr[],int left,int right,long point){
        int leftPtr = left - 1;
        int rightPtr = right + 1;
        while(true){
            //循环，将比关键字小的留在左端
            while(leftPtr<rightPtr&&arr[++leftPtr]<point);
            //循环，将比关键字大的留在右端
            while(rightPtr>leftPtr&&arr[--rightPtr]>point);
            if(leftPtr>=rightPtr){
                return;
            }else{
                long tmp = arr[leftPtr];
                arr[leftPtr] = arr[rightPtr];
                arr[rightPtr] = tmp;
            }

        }
    }
    public static void displayArr(long[] arr){
        System.out.println("[");
        for(long num : arr){
            System.out.println(num+" ");
        }
        System.out.println("]");
        System.out.println();
    }

    //这是一个main方法，是程序的入口：
    public static void main(String[] args) {
        long[] arr = new long[10];
        for (int i = 0; i < 10; i++) {
            arr[i] = (long)(Math.random()*99);

            QuickSort.displayArr(arr);
            QuickSort.partition(arr,0,arr.length-1,arr[arr.length-1]);
            QuickSort.displayArr(arr);
        }
    }
}
